name: Release Python Package

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Vulkan SDK and Runtime
      uses: jakoch/install-vulkan-sdk-action@v1.2.7
      with:
        vulkan_version: 1.4.328.1
        install_runtime: true
        cache: true
        stripdown: true
  
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install build wheel

    - name: Build package
      run: |
        cd binding
        python -m build --wheel --verbose

    - name: Test package installation
      run: |
        cd binding
        pip install $(ls dist/*.whl)

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: splatstream-${{ matrix.os }}-py${{ matrix.python-version }}
        path: binding/dist/

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        attestations: false
        path: dist/
        merge-multiple: true

    - name: Upload to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        skip-existing: true

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/**/*
        generate_release_notes: true
